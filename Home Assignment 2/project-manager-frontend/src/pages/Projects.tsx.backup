import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { projectsAPI } from '../services/api';
import { useAuth } from '../contexts/AuthContext';
import type { Project } from '../types';

const Projects = () => {
  const navigate = useNavigate();
  const { user } = useAuth();
  const [projects, setProjects] = useState<Project[]>([]);

  useEffect(() => {
    fetchProjects();
  }, []);

  const fetchProjects = async () => {
    try {
      const data = await projectsAPI.getAll();
      setProjects(data);
    } catch (err) {
      console.error('Failed to load projects');
    }
  };

  return (
    <div style={styles.container}>
      {/* Sidebar */}
      <aside style={styles.sidebar}>
        <div style={styles.logo}>
          <div style={styles.logoIcon}>ÔøΩ</div>
          <span style={styles.logoText}>PathLock</span>
        </div>

        <button onClick={() => navigate('/dashboard')} style={styles.createButton}>
          <span style={styles.plusIcon}>+</span>
          Create new project
        </button>

        <nav style={styles.nav}>
          <button style={styles.navItem} onClick={() => navigate('/dashboard')}>
            <span style={styles.navIcon}>üìä</span>
            Dashboard
          </button>
          <button style={styles.navItemActive} onClick={() => navigate('/projects')}>
            <span style={styles.navIcon}>üìÅ</span>
            Projects
          </button>
        </nav>
      </aside>

      {/* Main Content */}
      <div style={styles.mainContent}>
        {/* Top Header */}
        <header style={styles.header}>
          <h1 style={styles.pageTitle}>Projects</h1>
          <div style={styles.headerRight}>
            <div style={styles.userProfile} onClick={() => navigate('/profile')}>
              <div style={styles.avatar}>
                {user?.username?.charAt(0).toUpperCase()}
              </div>
              <div style={styles.userInfo}>
                <div style={styles.userName}>{user?.username || 'User'}</div>
                <div style={styles.userRole}>Product manager</div>
              </div>
            </div>
          </div>
        </header>

        {/* Content */}
        <div style={styles.content}>
          <div style={styles.projectsHeader}>
            <h2 style={styles.sectionTitle}>All Projects ({projects.length})</h2>
          </div>

          <div style={styles.projectsGrid}>
            {projects.length === 0 ? (
              <div style={{ textAlign: 'center', padding: '60px', color: '#9ca3af', gridColumn: '1 / -1' }}>
                <p style={{ fontSize: '18px', marginBottom: '10px' }}>No projects yet</p>
                <p>Create your first project to get started!</p>
              </div>
            ) : (
              projects.map((project) => (
                <div key={project.id} style={styles.projectCard}>
                  <div style={styles.projectHeader}>
                    <h3 style={styles.projectName}>{project.title}</h3>
                    <span style={{ ...styles.statusBadge, backgroundColor: '#dbeafe', color: '#1e40af' }}>
                      Active
                    </span>
                  </div>
                  <p style={styles.projectDescription}>{project.description || 'No description provided'}</p>
                  
                  <div style={styles.projectMeta}>
                    <div style={styles.metaItem}>
                      <span style={styles.metaLabel}>Owner:</span>
                      <span style={styles.metaValue}>{user?.username || 'You'}</span>
                    </div>
                    <div style={styles.metaItem}>
                      <span style={styles.metaLabel}>Created:</span>
                      <span style={styles.metaValue}>{new Date(project.createdAt).toLocaleDateString()}</span>
                    </div>
                  </div>

                  <button 
                    onClick={() => navigate(`/projects/${project.id}`)}
                    style={styles.viewDetailsBtn}
                  >
                    View Details
                  </button>
                </div>
              ))
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

const styles: { [key: string]: React.CSSProperties } = {
  container: {
    display: 'flex',
    minHeight: '100vh',
    backgroundColor: '#f8f9fa',
  },
  sidebar: {
    width: '240px',
    backgroundColor: '#1a1a1a',
    color: 'white',
    padding: '24px 16px',
    display: 'flex',
    flexDirection: 'column',
    gap: '24px',
  },
  logo: {
    display: 'flex',
    alignItems: 'center',
    gap: '12px',
    paddingBottom: '16px',
  },
  logoIcon: {
    width: '40px',
    height: '40px',
    borderRadius: '8px',
    background: 'linear-gradient(135deg, #ff6b35 0%, #ff8c42 100%)',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '20px',
  },
  logoText: {
    fontSize: '20px',
    fontWeight: 'bold',
  },
  createButton: {
    backgroundColor: 'white',
    color: '#1a1a1a',
    padding: '12px 16px',
    borderRadius: '8px',
    border: 'none',
    cursor: 'pointer',
    fontSize: '14px',
    fontWeight: '500',
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
  },
  plusIcon: {
    width: '20px',
    height: '20px',
    borderRadius: '50%',
    backgroundColor: '#ff6b35',
    color: 'white',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '16px',
  },
  nav: {
    display: 'flex',
    flexDirection: 'column',
    gap: '4px',
  },
  navItem: {
    backgroundColor: 'transparent',
    color: '#999',
    padding: '12px 16px',
    borderRadius: '8px',
    border: 'none',
    cursor: 'pointer',
    fontSize: '14px',
    textAlign: 'left',
    display: 'flex',
    alignItems: 'center',
    gap: '12px',
  },
  navItemActive: {
    backgroundColor: 'white',
    color: '#1a1a1a',
    padding: '12px 16px',
    borderRadius: '8px',
    border: 'none',
    cursor: 'pointer',
    fontSize: '14px',
    fontWeight: '500',
    textAlign: 'left',
    display: 'flex',
    alignItems: 'center',
    gap: '12px',
  },
  navIcon: {
    fontSize: '18px',
  },
  mainContent: {
    flex: 1,
    display: 'flex',
    flexDirection: 'column',
  },
  header: {
    backgroundColor: 'white',
    padding: '20px 40px',
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    borderBottom: '1px solid #e5e7eb',
  },
  pageTitle: {
    fontSize: '28px',
    fontWeight: 'bold',
    color: '#1a1a1a',
    margin: 0,
  },
  headerRight: {
    display: 'flex',
    alignItems: 'center',
    gap: '16px',
  },
  searchBar: {
    display: 'flex',
    alignItems: 'center',
    backgroundColor: '#f3f4f6',
    borderRadius: '8px',
    padding: '8px 16px',
    gap: '8px',
    width: '300px',
  },
  searchIcon: {
    fontSize: '16px',
    color: '#6b7280',
  },
  searchInput: {
    border: 'none',
    backgroundColor: 'transparent',
    outline: 'none',
    flex: 1,
    fontSize: '14px',
  },
  notificationBtn: {
    backgroundColor: 'transparent',
    border: 'none',
    fontSize: '20px',
    cursor: 'pointer',
    padding: '8px',
  },
  userProfile: {
    cursor: 'pointer',
    padding: '8px',
  },
  avatar: {
    width: '40px',
    height: '40px',
    borderRadius: '50%',
    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    color: 'white',
    fontWeight: 'bold',
  },
  content: {
    padding: '32px 40px',
    flex: 1,
  },
  projectsHeader: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: '24px',
  },
  sectionTitle: {
    fontSize: '20px',
    fontWeight: '600',
    color: '#1a1a1a',
    margin: 0,
  },
  filters: {
    display: 'flex',
    gap: '12px',
  },
  filterDropdown: {
    padding: '8px 16px',
    borderRadius: '6px',
    border: '1px solid #e5e7eb',
    fontSize: '14px',
    cursor: 'pointer',
    backgroundColor: 'white',
  },
  projectsGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(auto-fill, minmax(350px, 1fr))',
    gap: '24px',
  },
  projectCard: {
    backgroundColor: 'white',
    borderRadius: '12px',
    padding: '24px',
    boxShadow: '0 1px 3px rgba(0,0,0,0.1)',
  },
  projectHeader: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: '12px',
  },
  projectName: {
    fontSize: '18px',
    fontWeight: '600',
    color: '#1a1a1a',
    margin: 0,
    flex: 1,
  },
  statusBadge: {
    padding: '4px 12px',
    borderRadius: '12px',
    fontSize: '12px',
    fontWeight: '500',
    textTransform: 'capitalize' as const,
  },
  projectDescription: {
    fontSize: '14px',
    color: '#6b7280',
    marginBottom: '16px',
    lineHeight: '1.5',
  },
  projectMeta: {
    display: 'flex',
    flexDirection: 'column',
    gap: '8px',
    marginBottom: '16px',
  },
  metaItem: {
    display: 'flex',
    gap: '8px',
    fontSize: '13px',
  },
  metaLabel: {
    color: '#6b7280',
    fontWeight: '500',
  },
  metaValue: {
    color: '#1a1a1a',
  },
  progressSection: {
    marginBottom: '16px',
  },
  progressHeader: {
    display: 'flex',
    justifyContent: 'space-between',
    marginBottom: '8px',
  },
  progressLabel: {
    fontSize: '13px',
    color: '#6b7280',
    fontWeight: '500',
  },
  progressValue: {
    fontSize: '13px',
    color: '#1a1a1a',
    fontWeight: '600',
  },
  progressBar: {
    height: '8px',
    backgroundColor: '#f3f4f6',
    borderRadius: '4px',
    overflow: 'hidden',
  },
  progressFill: {
    height: '100%',
    borderRadius: '4px',
    transition: 'width 0.3s ease',
  },
  viewDetailsBtn: {
    width: '100%',
    padding: '10px',
    backgroundColor: '#ff6b35',
    color: 'white',
    border: 'none',
    borderRadius: '8px',
    fontSize: '14px',
    fontWeight: '500',
    cursor: 'pointer',
  },
  userInfo: {
    display: 'flex',
    flexDirection: 'column' as const,
    marginLeft: '12px',
  },
  userName: {
    fontSize: '14px',
    fontWeight: '600',
    color: '#1a1a1a',
  },
  userRole: {
    fontSize: '12px',
    color: '#6b7280',
  },
};

export default Projects;
